" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by
" the call to :runtime you can find below.  If you wish to change any of those
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
" will be overwritten everytime an upgrade of the vim packages is performed.
" It is recommended to make changes after sourcing debian.vim since it alters
" the value of the 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim


"--------------------------- color setting ---------------------------

if has("syntax")
  syntax on
endif

set nu
set t_Co=256
set background=dark
hi PreProc ctermfg=013
hi Constant ctermfg=202
hi LineNr ctermfg=248 ctermbg=233
hi Type ctermfg=046
hi Statement ctermfg=226
hi WarningMsg ctermfg=15 ctermbg=1
hi Comment ctermfg=13
hi DiffChange ctermbg=8
hi DiffText ctermbg=12


"------------------------------ Vundle -------------------------------
let iCanHazVundle=1
let vundle_readme=expand('~/.vim/bundle/vundle/README.md')
if !filereadable(vundle_readme)
  echo "Installing Vundle.."
  echo ""
  silent !mkdir -p ~/.vim/bundle
  silent !git clone https://github.com/gmarik/vundle ~/.vim/bundle/vundle
  let iCanHazVundle=0
endif

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

"Bundle 'Townk/vim-autoclose'
Bundle 'gmarik/vundle'
Bundle 'scrooloose/nerdtree'
Bundle 'snipMate'
Bundle 'pangloss/vim-javascript'
Bundle 'wesleyche/Trinity'
Bundle 'wesleyche/SrcExpl'
Bundle 'vim-scripts/Conque-Shell'
Bundle 'Lokaltog/vim-powerline'
Bundle 'vim-scripts/taglist.vim'
Bundle 'Shougo/neocomplcache.vim'
Bundle 'altercation/vim-colors-solarized'
Bundle 'tpope/vim-fugitive'
"Bundle 'wesQ3/wombat.vim'

" tagbar
Bundle 'majutsushi/tagbar'
let g:tagbar_left = 1

"---------------------------- Key Mapping ----------------------------

" Show function name
"   from: http://vim.wikia.com/wiki/Show_current_function_name_in_C_programs
fun! ShowFuncName()
  let lnum = line(".")
  let col = col(".")
  echohl ModeMsg
  echo getline(search("^[^ \t#/]\\{2}.*[^:]\s*$", 'bW'))
  echohl None
  call search("\\%" . lnum . "l" . "\\%" . col . "c")
endfun
map f :call ShowFuncName() <CR>

" F5: line number
:noremap <F5> :set nu! nu?<CR>
:nnoremap <CR> :nonu<CR><CR>

" F6: search highlight
:noremap <F6> :set hlsearch! hlsearch?<CR>
:nnoremap <CR> :nohlsearch<CR><CR>

" F6: search ignore case
:noremap <F7> :set ic! ic?<CR>
:nnoremap <CR> :noic<CR><CR>

" Open and close the Source Explorer separately
nmap <F9>  :TrinityToggleSourceExplorer<CR>

" Open and close tagbar
nmap <F10> :TagbarToggle<CR>

" Open and close the NERD Tree separately
nmap <F11> :TrinityToggleNERDTree<CR>

" Git blame (vim-fugitive)
:noremap <F12> :Gblame<CR>
:nnoremap <CR> :Gblame<CR><CR>

" For ctags
nmap ] <C-]>
nmap [ <C-t>


"--------------------------- vim-powerline ---------------------------
"set cmdheight=2
set laststatus=2


"---------------------------- tab setting ----------------------------
" ts=tabstop  sw=shiftwidth  et=expandtab  noet=noexpandtab
" softtabstop
set softtabstop=4 shiftwidth=4 expandtab
autocmd Filetype cpp setlocal ts=8 sw=8 noexpandtab
"autocmd Filetype c setlocal ts=8 sw=8 noexpandtab
autocmd Filetype python setlocal ts=4 sw=4 expandtab


"--------------------------- neocomplcache ---------------------------
let g:NeoComplCache_DisableAutoComplete=1
highlight Pmenu ctermfg=15 ctermbg=4
highlight PmenuSel ctermfg=0 ctermbg=3


"--------------------------- other setting ---------------------------
set tag=tags
set history=1000
